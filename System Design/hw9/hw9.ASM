TITLE	.HW9 (EXE) MYCOPY
	.MODEL	SMALL
	.STACK	64
	.DATA

SOURCE_FILE	DB	16	DUP	(0H)
DEST_FILE	DB	16	DUP	(0H)
SOURCE_HANDLE	DW	?
DEST_HANDLE	DW	?

RECORD_SIZE	EQU	512	
BUFFER	DB	RECORD_SIZE	DUP	(00H)



ERROR_LENGTH	DB	34
ERROR_1	DB	'ERROR : WRONG INPUT PARAMETER   ', 0DH, 0AH
ERROR_2	DB	'ERROR : SOURCE FILE OPEN FAIL   ', 0DH, 0AH
ERROR_3	DB	'ERROR : DEST FILE CREATE FAIL   ', 0DH, 0AH
ERROR_4	DB	'ERROR : FILE COPY FAIL          ', 0DH, 0AH
ERROR_5	DB	'ERROR : SET DATE ERROR          ', 0DH, 0AH
ERROR_6	DB	'ERROR : CLOSE FILE ERROR        ', 0DH, 0AH
ERROR_7	DB	'ERROR : SET READ ONLY FAIL      ',	0DH, 0AH
TRUE	EQU	1
FALSE	EQU	0

IS_ERROR	DB	FALSE	; 	0(FALSE) : NO ERROR, 
						;	1(TRUE) : ERROR

;------------------------------------
	.CODE
A10_MAIN	PROC	NEAR
	MOV	AX, @data
	MOV	DS, AX
	MOV	ES, AX
	INT 3
	CALL	B10_GET_PARAM
	CMP	IS_ERROR,	TRUE
	JE	A90_END

	CALL	C10_OPEN_FILE
	CMP	IS_ERROR,	TRUE
	JE	A90_END

	CALL	D10_CREATE_FILE
	CMP	IS_ERROR,	TRUE
	JE	A90_END

	CALL	E10_COPY_DATA
	CMP IS_ERROR,	TRUE
	JE	A90_END

	CALL	F10_SET_DATE
	CMP IS_ERROR,	TRUE
	JE	A90_END

	CALL	X10_CLOSE_FILE
	CMP IS_ERROR,	TRUE
	JE	A90_END

	CALL	G10_SET_READONLY
	CMP IS_ERROR,	TRUE
	JE	A90_END

A90_END:
	MOV	AX, 4C00H
	INT	21H
A10_MAIN	ENDP


;	GET FILE NAMES FROM DTA
;	-------------------------------
B10_GET_PARAM	PROC	NEAR
	PUSH	ES			;SAVE ES
	PUSH	DS			; AND DS
	
	; SET ES AND DS WITH PSP
	MOV	AH,	51H
	INT	21H
	MOV	ES,	BX
	MOV	DS,	BX
	
	; GET SOURCE FILE NAME
	MOV	AL,	20H
	MOV	CL,	DS:[80H]
	MOV	CH,	0
	MOV	DI,	82H

	REPNZ	SCASB
	JNZ	B90_ERROR

	; COPY SOURCE FILE NAME TO SOURCE_FILE
	PUSH	DI
	PUSH	SI
	PUSH	CX
	PUSH	ES

	DEC	DI
	MOV	CX,	DI
	SUB	CX,	82H
	MOV	SI,	82H
	MOV	AX,	@data
	MOV	ES,	AX
	LEA	DI,	SOURCE_FILE
	REP	MOVSB

	POP ES
	POP	CX
	POP	SI
	POP	DI

	; GET DESTINATION FILE NAME
	MOV	SI,	DI
	MOV	AL,	0DH

	REPNZ	SCASB
	JNZ	B90_ERROR

	; COPY DESTINATION FILE NAME TO DEST_FILE
	DEC	DI
	MOV	CX,	DI
	SUB	CX, SI

	MOV	AX,	@data
	MOV	ES,	AX
	LEA	DI,	DEST_FILE
	REP	MOVSB

	JMP B92_EXIT


B90_ERROR:
	MOV	AX, @data
	MOV	DS, AX
	
	MOV IS_ERROR, TRUE

	MOV	CL, ERROR_LENGTH
	MOV	CH, 0
	LEA	DX, ERROR_1
	CALL	Z10_DISPLAY

	JMP	B92_EXIT
B92_EXIT:
	POP	DS
	POP	ES
	RET

B10_GET_PARAM	ENDP


;	OPEN SOURCE FILE
;	-----------------------------------
C10_OPEN_FILE	PROC	NEAR
	MOV	AX,	3D00H	;REQUEST OPEN, READ ONLY
	LEA	DX,	SOURCE_FILE
	INT	21H
	JNC	B20

	; ON ERROR

	MOV IS_ERROR, TRUE
	MOV	CL, ERROR_LENGTH
	MOV	CH, 0
	LEA	DX, ERROR_2
	CALL	Z10_DISPLAY

	JMP	C90_EXIT

B20:
	; ON FILE OPEN SUCCESSFULLY
	MOV	SOURCE_HANDLE, AX

	JMP C90_EXIT 
C90_EXIT:
	RET
C10_OPEN_FILE	ENDP

;	CREATE DESTINATION FILE
;	------------------------------------
D10_CREATE_FILE	PROC	NEAR
	MOV	AH,	3CH
	MOV	CX,	00H
	LEA	DX, DEST_FILE
	INT	21H
	JNC	D20

	; ON ERROR

	MOV IS_ERROR, TRUE
	MOV	CL, ERROR_LENGTH
	MOV	CH, 0
	LEA	DX, ERROR_3
	CALL	Z10_DISPLAY

	JMP	D90_EXIT

D20:
	MOV	DEST_HANDLE, AX
D90_EXIT:
	RET
D10_CREATE_FILE ENDP

;	COPY DATA FROM SOURCE TO DESTINATION
;	--------------------------------------
E10_COPY_DATA	PROC	NEAR
	
	LEA	DX,	BUFFER
	MOV	CX,	RECORD_SIZE
	
E20_LOOP:
	; READ FROM SOURCE AND COPY THEM TO BUFFER
	MOV	AH,	3FH
	MOV	BX,	SOURCE_HANDLE
	INT	21H
	JC	E90_ERROR
	CMP	AX,	00H		; READ 0 BYTE
	JE	E91_EXIT	; THEN EXIT.

	;WRITE BUFFER DATA TO DESTINATION FILE
	MOV	AH, 40H
	MOV	BX,	DEST_HANDLE
	INT	21H
	JC	E90_ERROR
	CMP	AX,	RECORD_SIZE	;WRITE SUCCESSLY?
	JNE	E90_ERROR	; NO! THEN ERROR
	JE	E20_LOOP


E90_ERROR:
	MOV IS_ERROR, TRUE
	MOV	CL, ERROR_LENGTH
	MOV	CH, 0
	LEA	DX, ERROR_4
	CALL	Z10_DISPLAY

	JMP	D90_EXIT
E91_EXIT:
	RET
E10_COPY_DATA	ENDP

F10_SET_DATE	PROC	NEAR
	INT 3
	MOV	AH,	57H
	MOV	AL, 00H	; GET FILE'S DATE AND TIME
	MOV	BX,	SOURCE_HANDLE
	INT	21H
	JC	F90_ERROR

	MOV	SI,	DX
	AND	SI,	0000000111100000B
	CMP	SI, 0000000000100000B	; IS JANUARY?
	JE	F20_JANUARY

	; NOT JANUARY
	SUB	SI,	0000000000100000B
	JMP	F30_SET

F20_JANUARY:
	SUB	DX,	0000001000000000B	; SET YEAR -1
	MOV	SI,	0000000110000000B	; AND SET MONTH = 12

F30_SET:
	AND	DX,	1111111000011111B
	OR	DX,	SI
	MOV	AL,	01H
	MOV	BX,	DEST_HANDLE
	INT	21H
	JC	F90_ERROR
	JMP	F91_EXIT
F90_ERROR:
	
	MOV IS_ERROR, TRUE
	MOV	CL, ERROR_LENGTH
	MOV	CH, 0
	LEA	DX, ERROR_5
	CALL	Z10_DISPLAY

F91_EXIT:	RET
	RET
F10_SET_DATE	ENDP

G10_SET_READONLY	PROC	NEAR
	MOV	AH,	43H
	MOV	AL,	01	; SET ATTRIBUTE
	MOV	CX,	1	; READ ONLY FILE
	LEA	DX,	DEST_FILE
	INT 21H
	JC	G90_ERROR
	JMP	G91_EXIT
G90_ERROR:

	MOV IS_ERROR, TRUE
	MOV	CL, ERROR_LENGTH
	MOV	CH, 0
	LEA	DX, ERROR_7
	CALL	Z10_DISPLAY
G91_EXIT:
	RET
G10_SET_READONLY	ENDP

; CLOSE FILES
;	-----------------------
X10_CLOSE_FILE	PROC	NEAR
	MOV	AH,	3EH
	MOV	BX,	SOURCE_HANDLE
	INT	21H

	MOV	BX,	DEST_HANDLE
	INT 21H
	JC	X90_ERROR
	JMP	X91_EXIT
X90_ERROR:

	MOV IS_ERROR, TRUE
	MOV	CL, ERROR_LENGTH
	MOV	CH, 0
	LEA	DX, ERROR_6
	CALL	Z10_DISPLAY

X91_EXIT:
	RET
X10_CLOSE_FILE	ENDP


;	DISPLAY. 	CX : NUMBER OF CHARACTERS
;				DX : ADDRESS OF STRING
;	------------------------------------
Z10_DISPLAY	PROC	NEAR
	PUSH	AX
	PUSH	BX
	MOV	AH, 40H
	MOV	BX,	01
	INT	21H
	POP BX
	POP	AX
	RET
Z10_DISPLAY	ENDP



	END	A10_MAIN